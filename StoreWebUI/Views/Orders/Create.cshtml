@model StoreWebUI.Models.CreateOrderFromCustomerVM

@{
    ViewData["Title"] = "Create";
}

<h1>Create Order</h1>

<div>
    <h4>Customer</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Customer.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Customer.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Customer.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Customer.Email)
        </dd>
    </dl>
</div>
<form>
    <div class="dropdown">
        <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
            Choose Store
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
            @foreach (var item in Model.Stores)
            {
                <li><a asp-action="Cart" asp-route-customerId="@Model.Customer.CustomerId" asp-route-storeId="@item.Id">@item.Name.</a></li>
            }
        </ul>
    </div>
</form>
@if (Model.ChosenStore != null)
{
    <table class="table">
        <thead>
            <tr>
               <th>
                   Product Name
               </th>
               <th>
                   Amount in Stock
               </th>
               <th>
                   Quantity Ordered
               </th> 
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.ChosenStore.LineItemVMs)
        {
            <tr>
                <td>
                    @Html.DisplayFor(prod => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(stock => item.Count)
                </td>
                <td>
                    <form>
                        <label for="item"># of items ordered</label>
                        <input type="number" id="@item.ProductName" name="@item.ProductName" min="0" max="@item.Count" />
                    </form>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
<hr />
<div>
    <a asp-controller="Customers" asp-action="Details" asp-route-id="@Model.Customer.CustomerId">Back to Customer Details</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
