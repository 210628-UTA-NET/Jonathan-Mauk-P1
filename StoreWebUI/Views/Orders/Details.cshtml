@model StoreWebUI.Models.OrderVM

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Orders</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Customer
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CustomerName)
        </dd>
        <dt class="col-sm-2">
            Store
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StoreName)
        </dd>
        <dt class="col-sm-2">
            Time Ordered
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateOrdered)
        </dd>
        <dt class="col-sm-2">
            Total Price
        </dt>
        <dd class="col-sm-10">
            $@Html.DisplayFor(model => model.TotalPrice)
        </dd>
    </dl>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                Product Name
            </th>
            <th>
                Product Price
            </th>
            <th>
                Amount Ordered
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OrderLineItems)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    $@Html.DisplayFor(modelItem => item.ProductPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Count)
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    <a asp-controller="Customers" asp-action="Details" asp-route-id="@Model.CustomerId">Back to Customer</a> | 
    <a asp-controller="StoreFronts" asp-action="DetailOrders" asp-route-id="@Model.LocationId">Back to Store</a>
</div>
